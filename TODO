V add the author to each post
- extract two-leter abbreviations for each username
- generate a random sensible color for each username
- make change rules to the post html to reformat it into spectre-css classes (before sanitization). maybe store unsafe html instead and sanitize on retrieval
- pass previous search string to index template so we can pre-fill the search box (and report the current search)
- add a thread-id to each post
- add a thread-seq to search post (integer id determining the sequence in the thread) (we can do thread page * 1000 + post_nr)
V refactor indexer.Search method to return a searchResult array
- clean up the post -> searchresult enrichtment (initial generation, colors) somewhere clean
- refactor Search to use an internal method that accepts a bleve search
- add indexer.Retrieve method to retrieve post contents for a single post?
- add indexer.Thread() method to retrieve all posts for a given thread id (can just call Search?)
V update templates to actually use Search
V add batch handling with b:=idx.NewBatch, then b.Index() then idx.Batch(b)  [see https://github.com/blevesearch/beer-search/blob/master/main.go ]
V we can use https://blevesearch.com/docs/Index-Mapping/ this to flag fields for storage, but not for indexing.. that way we can store HTML content without having to index it
- add index-name support so that post identifiers can be prefixed
